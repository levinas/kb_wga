{
    "ver": "0.0.6",
    "authors": [
        "fangfang"
    ],
    "contact": "kbase.us/contact-us",
    "visible": true,
    "categories": ["active","sequence", "comparative_genomics"],
    "widgets": {
        "input": null,
	"output": "kbaseReportView"
    },
    "parameters": [
        {
            "id": "input_genomeset",
            "optional": true,
            "advanced": false,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "valid_ws_types": [ "KBaseSearch.GenomeSet" ]
            }
        },
        {
            "id": "input_genomes",
            "optional": true,
            "advanced": false,
            "allow_multiple": true,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "valid_ws_types": [ "KBaseGenomes.Genome", "KBaseGenomes.ContigSet" ]
            }
        },
	{
	    "id" : "output_alignment_name",
	    "optional" : false,
	    "advanced" : false,
	    "allow_multiple" : false,
	    "default_values" : [ "mauve.alignment" ],
	    "field_type" : "text",
	    "text_options" : {
		"valid_ws_types" : [ "KBaseGenomes.ContigSet" ],
		"is_output_name":true
	    }
	},
        {
            "id": "max_breakpoint_distance_scale",
            "optional": true,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "validate_as": "float"
            }
        },
        {
            "id": "conservation_distance_scale",
            "optional": true,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "validate_as": "float"
            }
        },
        {
            "id": "hmm_identity",
            "optional": true,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "validate_as": "float"
            }
        }
    ],
    "behavior": {
        "service-mapping": {
            "url": "",
            "name": "WholeGenomeAlignment",
            "method": "run_mauve",
            "input_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "workspace_name"
                },
		{
                    "input_parameter": "input_genomeset",
                    "target_property": "input_genomeset_ref",
                    "target_type_transform": "ref"
                },
                {
                    "input_parameter": "input_genomes",
                    "target_property": "input_genome_refs",
                    "target_type_transform": "list<ref>"
                },
		{
		    "input_parameter": "output_alignment_name",
          	    "target_property": "output_alignment_name"
		},
                {
                    "input_parameter": "max_breakpoint_distance_scale",
                    "target_property": "max_breakpoint_distance_scale"
                },
                {
                    "input_parameter": "conservation_distance_scale",
                    "target_property": "conservation_distance_scale"
                },
                {
                    "input_parameter": "hmm_identity",
                    "target_property": "hmm_identity"
                }
            ],
            "output_mapping": [
		{
		    "narrative_system_variable": "workspace",
		    "target_property": "workspace_name"
		},
		{
		    "service_method_output_path": [0,"report_name"],
		    "target_property": "report_name"
		},
		{
		    "service_method_output_path": [0,"report_ref"],
		    "target_property": "report_ref"
		},
		{
		    "constant_value": "16",
		    "target_property": "report_window_line_height"
		}
            ]
        }
    },
    "job_id_output_field": "docker"
}
